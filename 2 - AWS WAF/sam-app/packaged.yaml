AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'resources for aws waf lab

  '
Resources:
  UpdateIPListFunctionIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: update_ip_lambda_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - wafv2:DeleteIPSet
            - wafv2:ListIPSets
            - wafv2:UpdateIPSet
            - wafv2:GetIPSet
            - wafv2:GetWebACL
            - logs:*
            Resource: '*'
  UpdateIPListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://frankfurt-testing/waf/ef8b480a8049b7d217ca208cc8e62170
      Handler: app.lambda_handler
      Runtime: python3.7
      Role:
        Fn::GetAtt:
        - UpdateIPListFunctionIamRole
        - Arn
  TradeLedgerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: trade_ledger
      AttributeDefinitions:
      - AttributeName: market
        AttributeType: S
      - AttributeName: trade_date
        AttributeType: S
      KeySchema:
      - AttributeName: market
        KeyType: HASH
      - AttributeName: trade_date
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
  TradeLedgerApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: trade_ledger_api
  TradeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: TradeLedgerApi
      ParentId:
        Fn::GetAtt:
        - TradeLedgerApi
        - RootResourceId
      PathPart: trades
  TradeMarketResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: TradeLedgerApi
      ParentId:
        Ref: TradeResource
      PathPart: '{market}'
  TradePutMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: TradeLedgerApi
      ResourceId:
        Ref: TradeResource
      HttpMethod: POST
      AuthorizationType: NONE
      MethodResponses:
      - StatusCode: 200
      Integration:
        Type: AWS
        Credentials:
          Fn::GetAtt:
          - TradeLedgerApiIamRole
          - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
        - StatusCode: 200
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - :dynamodb:action/PutItem
        RequestTemplates:
          application/json: "{\n \"TableName\": \"trade_ledger\",\n \"Item\": {\n\
            \ \"market\": {\n \"S\": \"$input.path('$.market')\"\n },\n \"trade_date\"\
            : {\n \"S\": \"$input.path('$.trade_date')\"\n },\n \"quantity\": {\n\
            \ \"N\": \"$input.path('$.quantity')\"\n },\n \"transaction_type\": {\n\
            \ \"S\": \"$input.path('$.transaction_type')\"\n }\n }\n }\n"
  TradeGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: TradeLedgerApi
      ResourceId:
        Ref: TradeMarketResource
      HttpMethod: GET
      AuthorizationType: NONE
      MethodResponses:
      - StatusCode: 200
      Integration:
        Type: AWS
        Credentials:
          Fn::GetAtt:
          - TradeLedgerApiIamRole
          - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
        - StatusCode: 200
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - :dynamodb:action/Query
        RequestTemplates:
          application/json: "{\n \"TableName\": \"trade_ledger\", \n \"KeyConditionExpression\"\
            : \"market = :v1\", \n \"ExpressionAttributeValues\": {\n \":v1\": {\"\
            S\": \"$input.params('market')\"} \n} \n}"
  TradeLedgerTstDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - TradeGetMethod
    - TradePutMethod
    Properties:
      RestApiId:
        Ref: TradeLedgerApi
      StageName: tst
  TradeLedgerApiIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      Policies:
      - PolicyName: trade_ledger_api_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            - logs:*
            Resource:
              Fn::GetAtt:
              - TradeLedgerTable
              - Arn
  ArtilleryFilesBucket:
    Type: AWS::S3::Bucket
  ArtilleryInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - Ref: ArtilleryAccessIamRole
  ArtilleryAccessIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: artillery_s3_object_access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            Resource:
            - Fn::GetAtt:
              - ArtilleryFilesBucket
              - Arn
            - Fn::Join:
              - ''
              - - Fn::GetAtt:
                  - ArtilleryFilesBucket
                  - Arn
                - /*
  ArtilleryElasticIPOne:
    Type: AWS::EC2::EIP
  ArtilleryElasticIPTwo:
    Type: AWS::EC2::EIP
  BusinessPartnersIPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: usse_business_partners
      Scope: REGIONAL
      IPAddressVersion: IPV4
      Addresses:
      - Fn::Join:
        - ''
        - - Ref: ArtilleryElasticIPOne
          - /32
Outputs:
  TradeLedgerTable:
    Description: dynamodb table for tracking trades
    Value:
      Fn::GetAtt:
      - TradeLedgerTable
      - Arn
  ArtilleryFilesBucket:
    Description: s3 bucket for artillery execution files
    Value:
      Ref: ArtilleryFilesBucket
  MyStacksRegion:
    Value:
      Fn::Join:
      - ''
      - - 'arn:aws:apigateway:'
        - Ref: AWS::Region
        - :dynamodb:action/Query
